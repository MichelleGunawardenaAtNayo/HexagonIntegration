-----------------------------------------------------------------------------
--
--  Logical unit: IfsInventoryHandler
--  Type:         Utility
--  Component:    ORDER
--
--  Template:     3.0
--  Built by:     IFS Developer Studio
--
--  NOTE! Do not edit!! This file is completely generated and will be
--        overwritten next time the corresponding model is saved.
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
-------------------- API PACKAGE IMPLEMENTATION -----------------------------
-----------------------------------------------------------------------------

PROMPT Creating Ifs_Inventory_Handler_API implementation

-- [IFS COMPLETE BLOCK PACKAGEBODY Ifs_Inventory_Handler_API]
CREATE OR REPLACE PACKAGE BODY Ifs_Inventory_Handler_API IS

-----------------------------------------------------------------------------
-------------------- PRIVATE DECLARATIONS -----------------------------------
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
-------------------- LU SPECIFIC PUBLIC METHODS -----------------------------
-----------------------------------------------------------------------------

PROCEDURE Send_Inventory_Sf (
   min_interval_ IN NUMBER)
IS
   
   PROCEDURE Core (
      min_interval_ IN NUMBER)
   IS
      json_ CLOB;
      json_object_ JSON_OBJECT_T;
      json_array_  JSON_ARRAY_T:=JSON_ARRAY_T();
      
      warehouse_ VARCHAR2(100);
      qty_ NUMBER;
      part_no_ VARCHAR2(100);
      uom_ VARCHAR2(100);
      
      CURSOR get_inventroy_data_ IS
         SELECT t.warehouse AS warehouse_,
                (t.qty_onhand - t.qty_reserved) AS qty_,
                t.part_no AS part_no_,
                (Inventory_Part_API.Get_Unit_Meas(t.contract, t.part_no)) as uom_
         FROM Inventory_Part_In_Stock_tab t
         WHERE (t.warehouse = 'CCTS-MAIN-ST'
             OR t.warehouse = 'CCTS-FON'
             OR t.warehouse = 'SVCTRK-D231'
             OR t.warehouse = 'SVCTRK-D232'
             OR t.warehouse = 'SVCTRK-D233'
             OR t.warehouse = 'SVCTRK-D234') 
            AND t.rowversion < sysdate AND t.rowversion >= SYSDATE - (min_interval_ / (24 * 60));
   
   BEGIN
      OPEN get_inventroy_data_;
      LOOP
         FETCH get_inventroy_data_
         into warehouse_, qty_, part_no_, uom_;
         EXIT WHEN get_inventroy_data_%notfound; 
       
         json_object_ := JSON_OBJECT_T.parse('{
         "Location": {
            "IFS_Id__c": "' || warehouse_ || '"
         },
         "Product2": {
            "Sales_Part_No__c": "' || part_no_ || '"
         },
         "QuantityOnHand": ' || qty_ || ',
         "QuantityUnitOfMeasure": "' || uom_ || '"
       }');
       
         json_array_.append(json_object_);
     END LOOP;
     CLOSE get_inventroy_data_;
     
     json_ := json_array_.stringify();
     
     IF json_ <> '[]' THEN
      plsql_rest_sender_API.Call_Rest_EndPoint2(rest_service_ => 'SEND_INVENTORY_SF',
                                               xml_          => json_,
                                               http_method_  => 'POST');
                                               
     END IF;                                          
   END Core;

BEGIN
   General_SYS.Init_Method(Ifs_Inventory_Handler_API.lu_name_, 'Ifs_Inventory_Handler_API', 'Send_Inventory_Sf');
   Core(min_interval_);
END Send_Inventory_Sf;

-----------------------------------------------------------------------------
-------------------- FOUNDATION1 METHODS ------------------------------------
-----------------------------------------------------------------------------


--@IgnoreMissingSysinit
PROCEDURE Init
IS
   
   PROCEDURE Base
   IS
   BEGIN
      NULL;
   END Base;

BEGIN
   Base;
END Init;

BEGIN
   Init;
END Ifs_Inventory_Handler_API;
-- [END IFS COMPLETE BLOCK]
/
SHOW ERROR

GRANT EXECUTE ON Ifs_Inventory_Handler_API TO IFSSYS
/
